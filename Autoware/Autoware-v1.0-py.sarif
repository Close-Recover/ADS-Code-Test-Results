{
  "$schema" : "https://json.schemastore.org/sarif-2.1.0.json",
  "version" : "2.1.0",
  "runs" : [ {
    "tool" : {
      "driver" : {
        "name" : "CodeQL",
        "organization" : "GitHub",
        "semanticVersion" : "2.15.1",
        "rules" : [ {
          "id" : "py/incomplete-hostname-regexp",
          "name" : "py/incomplete-hostname-regexp",
          "shortDescription" : {
            "text" : "Incomplete regular expression for hostnames"
          },
          "fullDescription" : {
            "text" : "Matching a URL or hostname against a regular expression that contains an unescaped dot as part of the hostname might match more hostnames than expected."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-020" ],
            "description" : "Matching a URL or hostname against a regular expression that contains an unescaped dot as part of the hostname might match more hostnames than expected.",
            "id" : "py/incomplete-hostname-regexp",
            "kind" : "problem",
            "name" : "Incomplete regular expression for hostnames",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "7.8"
          }
        }, {
          "id" : "py/incomplete-url-substring-sanitization",
          "name" : "py/incomplete-url-substring-sanitization",
          "shortDescription" : {
            "text" : "Incomplete URL substring sanitization"
          },
          "fullDescription" : {
            "text" : "Security checks on the substrings of an unparsed URL are often vulnerable to bypassing."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-20" ],
            "description" : "Security checks on the substrings of an unparsed URL are often vulnerable to bypassing.",
            "id" : "py/incomplete-url-substring-sanitization",
            "kind" : "problem",
            "name" : "Incomplete URL substring sanitization",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "7.8"
          }
        }, {
          "id" : "py/overly-large-range",
          "name" : "py/overly-large-range",
          "shortDescription" : {
            "text" : "Overly permissive regular expression range"
          },
          "fullDescription" : {
            "text" : "Overly permissive regular expression ranges match a wider range of characters than intended. This may allow an attacker to bypass a filter or sanitizer."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-020" ],
            "description" : "Overly permissive regular expression ranges match a wider range of characters than intended.\n              This may allow an attacker to bypass a filter or sanitizer.",
            "id" : "py/overly-large-range",
            "kind" : "problem",
            "name" : "Overly permissive regular expression range",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "5.0"
          }
        }, {
          "id" : "py/command-line-injection",
          "name" : "py/command-line-injection",
          "shortDescription" : {
            "text" : "Uncontrolled command line"
          },
          "fullDescription" : {
            "text" : "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-078", "external/cwe/cwe-088" ],
            "description" : "Using externally controlled strings in a command line may allow a malicious\n              user to change the meaning of the command.",
            "id" : "py/command-line-injection",
            "kind" : "path-problem",
            "name" : "Uncontrolled command line",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "9.8",
            "sub-severity" : "high"
          }
        }, {
          "id" : "py/shell-command-constructed-from-input",
          "name" : "py/shell-command-constructed-from-input",
          "shortDescription" : {
            "text" : "Unsafe shell command constructed from library input"
          },
          "fullDescription" : {
            "text" : "Using externally controlled strings in a command line may allow a malicious user to change the meaning of the command."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "correctness", "security", "external/cwe/cwe-078", "external/cwe/cwe-088", "external/cwe/cwe-073" ],
            "description" : "Using externally controlled strings in a command line may allow a malicious\n              user to change the meaning of the command.",
            "id" : "py/shell-command-constructed-from-input",
            "kind" : "path-problem",
            "name" : "Unsafe shell command constructed from library input",
            "precision" : "medium",
            "problem.severity" : "error",
            "security-severity" : "6.3"
          }
        }, {
          "id" : "py/jinja2/autoescape-false",
          "name" : "py/jinja2/autoescape-false",
          "shortDescription" : {
            "text" : "Jinja2 templating with autoescape=False"
          },
          "fullDescription" : {
            "text" : "Using jinja2 templates with 'autoescape=False' can cause a cross-site scripting vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079" ],
            "description" : "Using jinja2 templates with 'autoescape=False' can\n              cause a cross-site scripting vulnerability.",
            "id" : "py/jinja2/autoescape-false",
            "kind" : "problem",
            "name" : "Jinja2 templating with autoescape=False",
            "precision" : "medium",
            "problem.severity" : "error",
            "security-severity" : "6.1"
          }
        }, {
          "id" : "py/reflective-xss",
          "name" : "py/reflective-xss",
          "shortDescription" : {
            "text" : "Reflected server-side cross-site scripting"
          },
          "fullDescription" : {
            "text" : "Writing user input directly to a web page allows for a cross-site scripting vulnerability."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-079", "external/cwe/cwe-116" ],
            "description" : "Writing user input directly to a web page\n              allows for a cross-site scripting vulnerability.",
            "id" : "py/reflective-xss",
            "kind" : "path-problem",
            "name" : "Reflected server-side cross-site scripting",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "6.1",
            "sub-severity" : "high"
          }
        }, {
          "id" : "py/sql-injection",
          "name" : "py/sql-injection",
          "shortDescription" : {
            "text" : "SQL query built from user-controlled sources"
          },
          "fullDescription" : {
            "text" : "Building a SQL query from user-controlled sources is vulnerable to insertion of malicious SQL code by the user."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-089" ],
            "description" : "Building a SQL query from user-controlled sources is vulnerable to insertion of\n              malicious SQL code by the user.",
            "id" : "py/sql-injection",
            "kind" : "path-problem",
            "name" : "SQL query built from user-controlled sources",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "8.8"
          }
        }, {
          "id" : "py/pam-auth-bypass",
          "name" : "py/pam-auth-bypass",
          "shortDescription" : {
            "text" : "PAM authorization bypass due to incorrect usage"
          },
          "fullDescription" : {
            "text" : "Not using `pam_acct_mgmt` after `pam_authenticate` to check the validity of a login can lead to authorization bypass."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-285" ],
            "description" : "Not using `pam_acct_mgmt` after `pam_authenticate` to check the validity of a login can lead to authorization bypass.",
            "id" : "py/pam-auth-bypass",
            "kind" : "path-problem",
            "name" : "PAM authorization bypass due to incorrect usage",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "8.1"
          }
        }, {
          "id" : "py/flask-constant-secret-key",
          "name" : "py/flask-constant-secret-key",
          "shortDescription" : {
            "text" : "Initializing SECRET_KEY of Flask application with Constant value"
          },
          "fullDescription" : {
            "text" : "Initializing SECRET_KEY of Flask application with Constant value files can lead to Authentication bypass"
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "experimental", "external/cwe/cwe-287" ],
            "description" : "Initializing SECRET_KEY of Flask application with Constant value\n files can lead to Authentication bypass",
            "id" : "py/flask-constant-secret-key",
            "kind" : "path-problem",
            "name" : "Initializing SECRET_KEY of Flask application with Constant value",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "8.5"
          }
        }, {
          "id" : "py/improper-ldap-auth",
          "name" : "py/improper-ldap-auth",
          "shortDescription" : {
            "text" : "Improper LDAP Authentication"
          },
          "fullDescription" : {
            "text" : "A user-controlled query carries no authentication"
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "experimental", "external/cwe/cwe-287" ],
            "description" : "A user-controlled query carries no authentication",
            "id" : "py/improper-ldap-auth",
            "kind" : "problem",
            "name" : "Improper LDAP Authentication",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "py/paramiko-missing-host-key-validation",
          "name" : "py/paramiko-missing-host-key-validation",
          "shortDescription" : {
            "text" : "Accepting unknown SSH host keys when using Paramiko"
          },
          "fullDescription" : {
            "text" : "Accepting unknown host keys can allow man-in-the-middle attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-295" ],
            "description" : "Accepting unknown host keys can allow man-in-the-middle attacks.",
            "id" : "py/paramiko-missing-host-key-validation",
            "kind" : "problem",
            "name" : "Accepting unknown SSH host keys when using Paramiko",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/request-without-cert-validation",
          "name" : "py/request-without-cert-validation",
          "shortDescription" : {
            "text" : "Request without certificate validation"
          },
          "fullDescription" : {
            "text" : "Making a request without certificate validation can allow man-in-the-middle attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-295" ],
            "description" : "Making a request without certificate validation can allow man-in-the-middle attacks.",
            "id" : "py/request-without-cert-validation",
            "kind" : "problem",
            "name" : "Request without certificate validation",
            "precision" : "medium",
            "problem.severity" : "error",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/clear-text-logging-sensitive-data",
          "name" : "py/clear-text-logging-sensitive-data",
          "shortDescription" : {
            "text" : "Clear-text logging of sensitive information"
          },
          "fullDescription" : {
            "text" : "Logging sensitive information without encryption or hashing can expose it to an attacker."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-312", "external/cwe/cwe-359", "external/cwe/cwe-532" ],
            "description" : "Logging sensitive information without encryption or hashing can\n              expose it to an attacker.",
            "id" : "py/clear-text-logging-sensitive-data",
            "kind" : "path-problem",
            "name" : "Clear-text logging of sensitive information",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/clear-text-storage-sensitive-data",
          "name" : "py/clear-text-storage-sensitive-data",
          "shortDescription" : {
            "text" : "Clear-text storage of sensitive information"
          },
          "fullDescription" : {
            "text" : "Sensitive information stored without encryption or hashing can expose it to an attacker."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-312", "external/cwe/cwe-315", "external/cwe/cwe-359" ],
            "description" : "Sensitive information stored without encryption or hashing can expose it to an\n              attacker.",
            "id" : "py/clear-text-storage-sensitive-data",
            "kind" : "path-problem",
            "name" : "Clear-text storage of sensitive information",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/weak-crypto-key",
          "name" : "py/weak-crypto-key",
          "shortDescription" : {
            "text" : "Use of weak cryptographic key"
          },
          "fullDescription" : {
            "text" : "Use of a cryptographic key that is too small may allow the encryption to be broken."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-326" ],
            "description" : "Use of a cryptographic key that is too small may allow the encryption to be broken.",
            "id" : "py/weak-crypto-key",
            "kind" : "problem",
            "name" : "Use of weak cryptographic key",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/weak-cryptographic-algorithm",
          "name" : "py/weak-cryptographic-algorithm",
          "shortDescription" : {
            "text" : "Use of a broken or weak cryptographic algorithm"
          },
          "fullDescription" : {
            "text" : "Using broken or weak cryptographic algorithms can compromise security."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-327" ],
            "description" : "Using broken or weak cryptographic algorithms can compromise security.",
            "id" : "py/weak-cryptographic-algorithm",
            "kind" : "problem",
            "name" : "Use of a broken or weak cryptographic algorithm",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/insecure-default-protocol",
          "name" : "py/insecure-default-protocol",
          "shortDescription" : {
            "text" : "Default version of SSL/TLS may be insecure"
          },
          "fullDescription" : {
            "text" : "Leaving the SSL/TLS version unspecified may result in an insecure default protocol being used."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-327" ],
            "description" : "Leaving the SSL/TLS version unspecified may result in an insecure\n              default protocol being used.",
            "id" : "py/insecure-default-protocol",
            "kind" : "problem",
            "name" : "Default version of SSL/TLS may be insecure",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/insecure-protocol",
          "name" : "py/insecure-protocol",
          "shortDescription" : {
            "text" : "Use of insecure SSL/TLS version"
          },
          "fullDescription" : {
            "text" : "Using an insecure SSL/TLS version may leave the connection vulnerable to attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-327" ],
            "description" : "Using an insecure SSL/TLS version may leave the connection vulnerable to attacks.",
            "id" : "py/insecure-protocol",
            "kind" : "problem",
            "name" : "Use of insecure SSL/TLS version",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/weak-sensitive-data-hashing",
          "name" : "py/weak-sensitive-data-hashing",
          "shortDescription" : {
            "text" : "Use of a broken or weak cryptographic hashing algorithm on sensitive data"
          },
          "fullDescription" : {
            "text" : "Using broken or weak cryptographic hashing algorithms can compromise security."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-327", "external/cwe/cwe-328", "external/cwe/cwe-916" ],
            "description" : "Using broken or weak cryptographic hashing algorithms can compromise security.",
            "id" : "py/weak-sensitive-data-hashing",
            "kind" : "path-problem",
            "name" : "Use of a broken or weak cryptographic hashing algorithm on sensitive data",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/csrf-protection-disabled",
          "name" : "py/csrf-protection-disabled",
          "shortDescription" : {
            "text" : "CSRF protection weakened or disabled"
          },
          "fullDescription" : {
            "text" : "Disabling or weakening CSRF protection may make the application vulnerable to a Cross-Site Request Forgery (CSRF) attack."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-352" ],
            "description" : "Disabling or weakening CSRF protection may make the application\n              vulnerable to a Cross-Site Request Forgery (CSRF) attack.",
            "id" : "py/csrf-protection-disabled",
            "kind" : "problem",
            "name" : "CSRF protection weakened or disabled",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "8.8"
          }
        }, {
          "id" : "py/unsafe-deserialization",
          "name" : "py/unsafe-deserialization",
          "shortDescription" : {
            "text" : "Deserialization of user-controlled data"
          },
          "fullDescription" : {
            "text" : "Deserializing user-controlled data may allow attackers to execute arbitrary code."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "external/cwe/cwe-502", "security", "serialization" ],
            "description" : "Deserializing user-controlled data may allow attackers to execute arbitrary code.",
            "id" : "py/unsafe-deserialization",
            "kind" : "path-problem",
            "name" : "Deserialization of user-controlled data",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "9.8",
            "sub-severity" : "high"
          }
        }, {
          "id" : "py/insecure-ldap-auth",
          "name" : "py/insecure-ldap-auth",
          "shortDescription" : {
            "text" : "Python Insecure LDAP Authentication"
          },
          "fullDescription" : {
            "text" : "Python LDAP Insecure LDAP Authentication"
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "experimental", "external/cwe/cwe-522", "external/cwe/cwe-523" ],
            "description" : "Python LDAP Insecure LDAP Authentication",
            "id" : "py/insecure-ldap-auth",
            "kind" : "path-problem",
            "name" : "Python Insecure LDAP Authentication",
            "problem.severity" : "error"
          }
        }, {
          "id" : "py/simple-xml-rpc-server-dos",
          "name" : "py/simple-xml-rpc-server-dos",
          "shortDescription" : {
            "text" : "SimpleXMLRPCServer denial of service"
          },
          "fullDescription" : {
            "text" : "SimpleXMLRPCServer is vulnerable to denial of service attacks from untrusted user input"
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "experimental", "external/cwe/cwe-776" ],
            "description" : "SimpleXMLRPCServer is vulnerable to denial of service attacks from untrusted user input",
            "id" : "py/simple-xml-rpc-server-dos",
            "kind" : "problem",
            "name" : "SimpleXMLRPCServer denial of service",
            "precision" : "high",
            "problem.severity" : "warning"
          }
        }, {
          "id" : "py/xxe",
          "name" : "py/xxe",
          "shortDescription" : {
            "text" : "XML external entity expansion"
          },
          "fullDescription" : {
            "text" : "Parsing user input as an XML document with external entity expansion is vulnerable to XXE attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-611", "external/cwe/cwe-827" ],
            "description" : "Parsing user input as an XML document with external\n              entity expansion is vulnerable to XXE attacks.",
            "id" : "py/xxe",
            "kind" : "path-problem",
            "name" : "XML external entity expansion",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "9.1"
          }
        }, {
          "id" : "py/xpath-injection",
          "name" : "py/xpath-injection",
          "shortDescription" : {
            "text" : "XPath query built from user-controlled sources"
          },
          "fullDescription" : {
            "text" : "Building a XPath query from user-controlled sources is vulnerable to insertion of malicious Xpath code by the user."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-643" ],
            "description" : "Building a XPath query from user-controlled sources is vulnerable to insertion of\n              malicious Xpath code by the user.",
            "id" : "py/xpath-injection",
            "kind" : "path-problem",
            "name" : "XPath query built from user-controlled sources",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "9.8"
          }
        }, {
          "id" : "py/polynomial-redos",
          "name" : "py/polynomial-redos",
          "shortDescription" : {
            "text" : "Polynomial regular expression used on uncontrolled data"
          },
          "fullDescription" : {
            "text" : "A regular expression that can require polynomial time to match may be vulnerable to denial-of-service attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-1333", "external/cwe/cwe-730", "external/cwe/cwe-400" ],
            "description" : "A regular expression that can require polynomial time\n              to match may be vulnerable to denial-of-service attacks.",
            "id" : "py/polynomial-redos",
            "kind" : "path-problem",
            "name" : "Polynomial regular expression used on uncontrolled data",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/redos",
          "name" : "py/redos",
          "shortDescription" : {
            "text" : "Inefficient regular expression"
          },
          "fullDescription" : {
            "text" : "A regular expression that requires exponential time to match certain inputs can be a performance bottleneck, and may be vulnerable to denial-of-service attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-1333", "external/cwe/cwe-730", "external/cwe/cwe-400" ],
            "description" : "A regular expression that requires exponential time to match certain inputs\n              can be a performance bottleneck, and may be vulnerable to denial-of-service\n              attacks.",
            "id" : "py/redos",
            "kind" : "problem",
            "name" : "Inefficient regular expression",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/regex-injection",
          "name" : "py/regex-injection",
          "shortDescription" : {
            "text" : "Regular expression injection"
          },
          "fullDescription" : {
            "text" : "User input should not be used in regular expressions without first being escaped, otherwise a malicious user may be able to inject an expression that could require exponential time on certain inputs."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-730", "external/cwe/cwe-400" ],
            "description" : "User input should not be used in regular expressions without first being escaped,\n              otherwise a malicious user may be able to inject an expression that could require\n              exponential time on certain inputs.",
            "id" : "py/regex-injection",
            "kind" : "path-problem",
            "name" : "Regular expression injection",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/overly-permissive-file",
          "name" : "py/overly-permissive-file",
          "shortDescription" : {
            "text" : "Overly permissive file permissions"
          },
          "fullDescription" : {
            "text" : "Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "external/cwe/cwe-732", "security" ],
            "description" : "Allowing files to be readable or writable by users other than the owner may allow sensitive information to be accessed.",
            "id" : "py/overly-permissive-file",
            "kind" : "problem",
            "name" : "Overly permissive file permissions",
            "precision" : "medium",
            "problem.severity" : "warning",
            "security-severity" : "7.8",
            "sub-severity" : "high"
          }
        }, {
          "id" : "py/xml-bomb",
          "name" : "py/xml-bomb",
          "shortDescription" : {
            "text" : "XML internal entity expansion"
          },
          "fullDescription" : {
            "text" : "Parsing user input as an XML document with arbitrary internal entity expansion is vulnerable to denial-of-service attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "warning"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-776", "external/cwe/cwe-400" ],
            "description" : "Parsing user input as an XML document with arbitrary internal\n              entity expansion is vulnerable to denial-of-service attacks.",
            "id" : "py/xml-bomb",
            "kind" : "path-problem",
            "name" : "XML internal entity expansion",
            "precision" : "high",
            "problem.severity" : "warning",
            "security-severity" : "7.5"
          }
        }, {
          "id" : "py/hardcoded-credentials",
          "name" : "py/hardcoded-credentials",
          "shortDescription" : {
            "text" : "Hard-coded credentials"
          },
          "fullDescription" : {
            "text" : "Credentials are hard coded in the source code of the application."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-259", "external/cwe/cwe-321", "external/cwe/cwe-798" ],
            "description" : "Credentials are hard coded in the source code of the application.",
            "id" : "py/hardcoded-credentials",
            "kind" : "path-problem",
            "name" : "Hard-coded credentials",
            "precision" : "medium",
            "problem.severity" : "error",
            "security-severity" : "9.8"
          }
        }, {
          "id" : "py/full-ssrf",
          "name" : "py/full-ssrf",
          "shortDescription" : {
            "text" : "Full server-side request forgery"
          },
          "fullDescription" : {
            "text" : "Making a network request to a URL that is fully user-controlled allows for request forgery attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-918" ],
            "description" : "Making a network request to a URL that is fully user-controlled allows for request forgery attacks.",
            "id" : "py/full-ssrf",
            "kind" : "path-problem",
            "name" : "Full server-side request forgery",
            "precision" : "high",
            "problem.severity" : "error",
            "security-severity" : "9.1"
          }
        }, {
          "id" : "py/partial-ssrf",
          "name" : "py/partial-ssrf",
          "shortDescription" : {
            "text" : "Partial server-side request forgery"
          },
          "fullDescription" : {
            "text" : "Making a network request to a URL that is partially user-controlled allows for request forgery attacks."
          },
          "defaultConfiguration" : {
            "enabled" : true,
            "level" : "error"
          },
          "properties" : {
            "tags" : [ "security", "external/cwe/cwe-918" ],
            "description" : "Making a network request to a URL that is partially user-controlled allows for request forgery attacks.",
            "id" : "py/partial-ssrf",
            "kind" : "path-problem",
            "name" : "Partial server-side request forgery",
            "precision" : "medium",
            "problem.severity" : "error",
            "security-severity" : "9.1"
          }
        } ]
      },
      "extensions" : [ {
        "name" : "codeql/python-queries",
        "semanticVersion" : "0.9.8-dev",
        "locations" : [ {
          "uri" : "file:///root/codeql-main/python/ql/src/",
          "description" : {
            "text" : "The QL pack root directory."
          }
        }, {
          "uri" : "file:///root/codeql-main/python/ql/src/qlpack.yml",
          "description" : {
            "text" : "The QL pack definition file."
          }
        } ]
      } ]
    },
    "artifacts" : [ {
      "location" : {
        "uri" : "src/universe/autoware.universe/planning/static_centerline_optimizer/scripts/app.py",
        "uriBaseId" : "%SRCROOT%",
        "index" : 0
      }
    } ],
    "results" : [ {
      "ruleId" : "py/flask-constant-secret-key",
      "ruleIndex" : 9,
      "rule" : {
        "id" : "py/flask-constant-secret-key",
        "index" : 9
      },
      "message" : {
        "text" : "The SECRET_KEY config variable is assigned by [this constant String](1)."
      },
      "locations" : [ {
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/universe/autoware.universe/planning/static_centerline_optimizer/scripts/app.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 22,
            "endColumn" : 38
          }
        }
      } ],
      "partialFingerprints" : {
        "primaryLocationLineHash" : "685bf34b6d14b8eb:1",
        "primaryLocationStartColumnFingerprint" : "17"
      },
      "relatedLocations" : [ {
        "id" : 1,
        "physicalLocation" : {
          "artifactLocation" : {
            "uri" : "src/universe/autoware.universe/planning/static_centerline_optimizer/scripts/app.py",
            "uriBaseId" : "%SRCROOT%",
            "index" : 0
          },
          "region" : {
            "startLine" : 177,
            "startColumn" : 22,
            "endColumn" : 38
          }
        },
        "message" : {
          "text" : "this constant String"
        }
      } ]
    } ],
    "columnKind" : "unicodeCodePoints",
    "properties" : {
      "semmle.formatSpecifier" : "sarif-latest"
    }
  } ]
}